# sent_id = email-enronsent16_01-0011
# newpar id = email-enronsent16_01-p0005
# text = Jonathan Day
1	Jonathan	Jonathan	PROPN	NNP	PROPN;SG	0	root	0:root	_
2	Day	Day	PROPN	NNP	PROPN;SG	1	flat	1:flat	_

# sent_id = email-enronsent16_01-0012
# newpar id = email-enronsent16_01-p0006
# text = Marly,
1	Marly	Marly	PROPN	NNP	PROPN;SG	0	root	0:root	SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_

# sent_id = email-enronsent16_01-0013
# newpar id = email-enronsent16_01-p0007
# text = If you could respond to me on this request, thanks
1	If	if	SCONJ	IN	CONJ	4	mark	4:mark	_
2	you	you	PRON	PRP	2;NOM;PRO	4	nsubj	4:nsubj	_
3	could	could	AUX	MD	V;FIN	4	aux	4:aux	_
4	respond	respond	VERB	VB	V;NFIN	11	advcl	11:advcl:if	_
5	to	to	ADP	IN	ADP	6	case	6:case	_
6	me	I	PRON	PRP	ACC;1;PRO;SG	4	obl	4:obl:to	_
7	on	on	ADP	IN	ADP	9	case	9:case	_
8	this	this	DET	DT	SG;DET	9	det	9:det	_
9	request	request	NOUN	NN	SG;N	4	obl	4:obl:on	SpaceAfter=No
10	,	,	PUNCT	,	_	4	punct	4:punct	_
11	thanks	thanks	NOUN	NN	SG;N	0	root	0:root	_

# sent_id = email-enronsent16_01-0014
# newpar id = email-enronsent16_01-p0008
# text = Justin
1	Justin	Justin	PROPN	NNP	PROPN;SG	0	root	0:root	_

# sent_id = email-enronsent16_01-0015
# newpar id = email-enronsent16_01-p0009
# text = Paul Goddard
1	Paul	Paul	PROPN	NNP	PROPN;SG	0	root	0:root	_
2	Goddard	Goddard	PROPN	NNP	PROPN;SG	1	flat	1:flat	_

# sent_id = email-enronsent16_01-0016
# text = 08/03/2000 11:35
1	08/03/2000	08/03/2000	NUM	CD	NUM	0	root	0:root	_
2	11:35	11:35	NUM	CD	NUM	1	nmod:tmod	1:nmod:tmod	_

# sent_id = email-enronsent16_01-0017
# newpar id = email-enronsent16_01-p0010
# text = Can one of you give me a quick call to discuss .
1	Can	can	AUX	MD	V;FIN	5	aux	5:aux	_
2	one	one	NUM	CD	NUM	5	nsubj	5:nsubj	_
3	of	of	ADP	IN	ADP	4	case	4:case	_
4	you	you	PRON	PRP	ACC;2;PRO	2	nmod	2:nmod:of	_
5	give	give	VERB	VB	V;NFIN	0	root	0:root	_
6	me	I	PRON	PRP	ACC;1;PRO;SG	5	iobj	5:iobj	_
7	a	a	DET	DT	DET;INDF	9	det	9:det	_
8	quick	quick	ADJ	JJ	ADJ	9	amod	9:amod	_
9	call	call	NOUN	NN	SG;N	5	obj	5:obj	_
10	to	to	PART	TO	PART	11	mark	11:mark	_
11	discuss	discuss	VERB	VB	V;NFIN	5	advcl	5:advcl:to	_
12	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = email-enronsent16_01-0018
# text = I'm @ X37047.
1-2	I'm	_	_	_	_	_	_	_	_
1	I	I	PRON	PRP	NOM;1;PRO;SG	4	nsubj	4:nsubj	_
2	'm	be	AUX	VBP	PRS;IND;FIN;1;V;SG	4	cop	4:cop	_
3	@	@	ADP	IN	ADP	4	case	4:case	_
4	X37047	X37047	NOUN	NN	SG;N	0	root	0:root	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = email-enronsent16_01-0019
# text = Thanks.
1	Thanks	thanks	NOUN	NN	SG;N	0	root	0:root	SpaceAfter=No
2	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = email-enronsent16_01-0020
# newpar id = email-enronsent16_01-p0011
# text = I believe we are to some extent already protected with "Enron" proceeded with anything, but EnronOnline(TM) , etc. just affords us more protection.
1	I	I	PRON	PRP	NOM;1;PRO;SG	2	nsubj	2:nsubj	_
2	believe	believe	VERB	VBP	V;PRS;IND;FIN;1;SG	0	root	0:root	_
3	we	we	PRON	PRP	NOM;PL;1;PRO	9	nsubj:pass	9:nsubj:pass	_
4	are	be	AUX	VBP	PRS;IND;FIN;PL;1;V	9	aux:pass	9:aux:pass	_
5	to	to	ADP	IN	ADP	7	case	7:case	_
6	some	some	DET	DT	DET	7	det	7:det	_
7	extent	extent	NOUN	NN	SG;N	9	obl	9:obl:to	_
8	already	already	ADV	RB	ADV	9	advmod	9:advmod	_
9	protected	protect	VERB	VBN	V;V.PTCP;PST;PASS	2	ccomp	2:ccomp	_
10	with	with	ADP	IN	ADP	12	case	12:case	_
11	"	"	PUNCT	``	_	12	punct	12:punct	SpaceAfter=No
12	Enron	Enron	PROPN	NNP	PROPN;SG	9	obl	9:obl:with	SpaceAfter=No
13	"	"	PUNCT	''	_	12	punct	12:punct	_
14	proceeded	proceed	VERB	VBN	V;V.PTCP;PST;PASS	12	acl	12:acl	_
15	with	with	ADP	IN	ADP	16	case	16:case	_
16	anything	anything	PRON	NN	SG;PRO	14	obl	14:obl:with	SpaceAfter=No
17	,	,	PUNCT	,	_	26	punct	26:punct	_
18	but	but	CCONJ	CC	CONJ	26	cc	26:cc	_
19	EnronOnline	EnronOnline	PROPN	NNP	PROPN;SG	21	compound	21:compound	SpaceAfter=No
20	(	(	PUNCT	-LRB-	_	21	punct	21:punct	SpaceAfter=No
21	TM	tm	NOUN	NN	SG;N	26	nsubj	26:nsubj	SpaceAfter=No
22	)	)	PUNCT	-RRB-	_	21	punct	21:punct	_
23	,	,	PUNCT	,	_	24	punct	24:punct	_
24	etc.	etc.	NOUN	FW	N;PL	21	conj	21:conj	_
25	just	just	ADV	RB	ADV	26	advmod	26:advmod	_
26	affords	afford	VERB	VBZ	V;3;PRS;IND;FIN;SG	2	conj	2:conj:but	_
27	us	we	PRON	PRP	ACC;PL;1;PRO	26	iobj	26:iobj	_
28	more	more	ADJ	JJR	CMPR;ADJ	29	amod	29:amod	_
29	protection	protection	NOUN	NN	SG;N	26	obj	26:obj	SpaceAfter=No
30	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = email-enronsent16_01-0021
# text = I assume this is akin to why McDonald's trademarks "Mc"Everything?
1	I	I	PRON	PRP	NOM;1;PRO;SG	2	nsubj	2:nsubj	_
2	assume	assume	VERB	VBP	V;PRS;IND;FIN;1;SG	0	root	0:root	_
3	this	this	PRON	DT	SG;PRO	5	nsubj	5:nsubj	_
4	is	be	AUX	VBZ	3;PRS;IND;FIN;V;SG	5	cop	5:cop	_
5	akin	akin	ADJ	JJ	ADJ	2	ccomp	2:ccomp	_
6	to	to	SCONJ	IN	CONJ	10	mark	10:mark	_
7	why	why	ADV	WRB	ADV	10	advmod	10:advmod	_
8-9	McDonald's	_	_	_	_	_	_	_	_
8	McDonald	McDonald	PROPN	NNP	PROPN;SG	10	nsubj	10:nsubj	_
9	's	's	PART	POS	PART	8	case	8:case	_
10	trademarks	trademark	VERB	VBZ	V;3;PRS;IND;FIN;SG	5	advcl	5:advcl:to	_
11	"	"	PUNCT	``	_	12	punct	12:punct	SpaceAfter=No
12	Mc	Mc	PROPN	NNP	PROPN;SG	14	compound	14:compound	SpaceAfter=No
13	"	"	PUNCT	''	_	12	punct	12:punct	SpaceAfter=No
14	Everything	everything	PRON	NN	SG;PRO	10	obj	10:obj	SpaceAfter=No
15	?	?	PUNCT	.	_	2	punct	2:punct	_

# sent_id = email-enronsent16_01-0022
# text = David Forster
1	David	David	PROPN	NNP	PROPN;SG	0	root	0:root	_
2	Forster	Forster	PROPN	NNP	PROPN;SG	1	flat	1:flat	_

# sent_id = email-enronsent16_01-0023
# text = 08/03/2000 01:50
1	08/03/2000	08/03/2000	NUM	CD	NUM	0	root	0:root	_
2	01:50	01:50	NUM	CD	NUM	1	nmod:tmod	1:nmod:tmod	_

# sent_id = email-enronsent16_01-0024
# newpar id = email-enronsent16_01-p0012
# text = Paul,
1	Paul	Paul	PROPN	NNP	PROPN;SG	0	root	0:root	SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_

# sent_id = email-enronsent16_01-0025
# newpar id = email-enronsent16_01-p0013
# text = Can you please give me a call to discuss trademarking?
1	Can	can	AUX	MD	V;FIN	4	aux	4:aux	_
2	you	you	PRON	PRP	2;NOM;PRO	4	nsubj	4:nsubj	_
3	please	please	INTJ	UH	INTJ	4	discourse	4:discourse	_
4	give	give	VERB	VB	V;NFIN	0	root	0:root	_
5	me	I	PRON	PRP	ACC;1;PRO;SG	4	iobj	4:iobj	_
6	a	a	DET	DT	DET;INDF	7	det	7:det	_
7	call	call	NOUN	NN	SG;N	4	obj	4:obj	_
8	to	to	PART	TO	PART	9	mark	9:mark	_
9	discuss	discuss	VERB	VB	V;NFIN	4	advcl	4:advcl:to	_
10	trademarking	trademarking	NOUN	NN	SG;N	9	obj	9:obj	SpaceAfter=No
11	?	?	PUNCT	.	_	4	punct	4:punct	_

# sent_id = email-enronsent16_01-0026
# newpar id = email-enronsent16_01-p0014
# text = i.e. Are we covered if we proceed a word with "Enron"?
1	i.e.	i.e.	ADV	FW	ADV	4	advmod	4:advmod	_
2	Are	be	AUX	VBP	PRS;IND;FIN;PL;1;V	4	aux:pass	4:aux:pass	_
3	we	we	PRON	PRP	NOM;PL;1;PRO	4	nsubj:pass	4:nsubj:pass	_
4	covered	cover	VERB	VBN	V;V.PTCP;PST;PASS	0	root	0:root	_
5	if	if	SCONJ	IN	CONJ	7	mark	7:mark	_
6	we	we	PRON	PRP	NOM;PL;1;PRO	7	nsubj	7:nsubj	_
7	proceed	proceed	VERB	VBP	V;PRS;IND;FIN;PL;1	4	advcl	4:advcl:if	_
8	a	a	DET	DT	DET;INDF	9	det	9:det	_
9	word	word	NOUN	NN	SG;N	7	obj	7:obj	_
10	with	with	ADP	IN	ADP	12	case	12:case	_
11	"	"	PUNCT	``	_	12	punct	12:punct	SpaceAfter=No
12	Enron	Enron	PROPN	NNP	PROPN;SG	7	obl	7:obl:with	SpaceAfter=No
13	"	"	PUNCT	''	_	12	punct	12:punct	SpaceAfter=No
14	?	?	PUNCT	.	_	4	punct	4:punct	_

# sent_id = email-enronsent16_01-0027
# text = e.g.: EnronEAuction.
1	e.g.	e.g.	ADJ	FW	ADJ	3	amod	3:amod	SpaceAfter=No
2	:	:	PUNCT	:	_	1	punct	1:punct	_
3	EnronEAuction	EnronEAuction	PROPN	NNP	PROPN;SG	0	root	0:root	SpaceAfter=No
4	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = email-enronsent16_01-0028
# newpar id = email-enronsent16_01-p0015
# text = If we are covered, then was it necessary to register EnronOnline?
1	If	if	SCONJ	IN	CONJ	4	mark	4:mark	_
2	we	we	PRON	PRP	NOM;PL;1;PRO	4	nsubj:pass	4:nsubj:pass	_
3	are	be	AUX	VBP	PRS;IND;FIN;PL;1;V	4	aux:pass	4:aux:pass	_
4	covered	cover	VERB	VBN	V;V.PTCP;PST;PASS	9	advcl	9:advcl:if	SpaceAfter=No
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	then	then	ADV	RB	ADV	9	advmod	9:advmod	_
7	was	be	AUX	VBD	3;IND;FIN;PST;V;SG	9	cop	9:cop	_
8	it	it	PRON	PRP	3;NOM;NEUT;PRO;SG	9	expl	9:expl	_
9	necessary	necessary	ADJ	JJ	ADJ	0	root	0:root	_
10	to	to	PART	TO	PART	11	mark	11:mark	_
11	register	register	VERB	VB	V;NFIN	9	csubj	9:csubj	_
12	EnronOnline	EnronOnline	PROPN	NNP	PROPN;SG	11	obj	11:obj	SpaceAfter=No
13	?	?	PUNCT	.	_	9	punct	9:punct	_

# sent_id = email-enronsent16_01-0029
# newpar id = email-enronsent16_01-p0016
# text = Thanks,
1	Thanks	thanks	NOUN	NN	SG;N	0	root	0:root	SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_

# sent_id = email-enronsent16_01-0030
# newpar id = email-enronsent16_01-p0017
# text = Dave
1	Dave	Dave	PROPN	NNP	PROPN;SG	0	root	0:root	_

# sent_id = email-enronsent16_01-0031
# newpar id = email-enronsent16_01-p0018
# text = ____________________________________________________________
1	____________________________________________________________	____________________________________________________________	SYM	NFP	_	0	root	0:root	_

# sent_id = email-enronsent16_01-0032
# newpar id = email-enronsent16_01-p0019
# text = This message is confidential.
1	This	this	DET	DT	SG;DET	2	det	2:det	_
2	message	message	NOUN	NN	SG;N	4	nsubj	4:nsubj	_
3	is	be	AUX	VBZ	3;PRS;IND;FIN;V;SG	4	cop	4:cop	_
4	confidential	confidential	ADJ	JJ	ADJ	0	root	0:root	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = email-enronsent16_01-0033
# text = It may also be privileged or otherwise protected by work product immunity or other legal rules.
1	It	it	PRON	PRP	3;NOM;NEUT;PRO;SG	5	nsubj	5:nsubj|8:nsubj:pass	_
2	may	may	AUX	MD	V;FIN	5	aux	5:aux	_
3	also	also	ADV	RB	ADV	5	advmod	5:advmod	_
4	be	be	AUX	VB	V;NFIN	5	cop	5:cop	_
5	privileged	privileged	ADJ	JJ	ADJ	0	root	0:root	_
6	or	or	CCONJ	CC	CONJ	8	cc	8:cc	_
7	otherwise	otherwise	ADV	RB	ADV	8	advmod	8:advmod	_
8	protected	protect	VERB	VBN	V;V.PTCP;PST;PASS	5	conj	5:conj:or	_
9	by	by	ADP	IN	ADP	12	case	12:case	_
10	work	work	NOUN	NN	SG;N	11	compound	11:compound	_
11	product	product	NOUN	NN	SG;N	12	compound	12:compound	_
12	immunity	immunity	NOUN	NN	SG;N	8	obl:agent	8:obl:agent	_
13	or	or	CCONJ	CC	CONJ	16	cc	16:cc	_
14	other	other	ADJ	JJ	ADJ	16	amod	16:amod	_
15	legal	legal	ADJ	JJ	ADJ	16	amod	16:amod	_
16	rules	rule	NOUN	NNS	N;PL	12	conj	8:obl:agent|12:conj:or	SpaceAfter=No
17	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = email-enronsent16_01-0034
# text = If you have received it by mistake please let us know by reply and then delete it from your system; you should not copy the message or disclose its contents to anyone.
1	If	if	SCONJ	IN	CONJ	4	mark	4:mark	_
2	you	you	PRON	PRP	2;NOM;PRO	4	nsubj	4:nsubj	_
3	have	have	AUX	VBP	PRS;IND;2;FIN;V;SG	4	aux	4:aux	_
4	received	receive	VERB	VBN	V;V.PTCP;PST	9	advcl	9:advcl:if	_
5	it	it	PRON	PRP	ACC;3;NEUT;PRO;SG	4	obj	4:obj	_
6	by	by	ADP	IN	ADP	7	case	7:case	_
7	mistake	mistake	NOUN	NN	SG;N	4	obl	4:obl:by	_
8	please	please	INTJ	UH	INTJ	9	discourse	9:discourse	_
9	let	let	VERB	VB	V;FIN;IMP	0	root	0:root	_
10	us	we	PRON	PRP	ACC;PL;1;PRO	9	obj	9:obj|11:nsubj:xsubj	_
11	know	know	VERB	VB	V;NFIN	9	xcomp	9:xcomp	_
12	by	by	ADP	IN	ADP	13	case	13:case	_
13	reply	reply	NOUN	NN	SG;N	9	obl	9:obl:by	_
14	and	and	CCONJ	CC	CONJ	16	cc	16:cc	_
15	then	then	ADV	RB	ADV	16	advmod	16:advmod	_
16	delete	delete	VERB	VB	V;FIN;IMP	9	conj	9:conj:and	_
17	it	it	PRON	PRP	ACC;3;NEUT;PRO;SG	16	obj	16:obj	_
18	from	from	ADP	IN	ADP	20	case	20:case	_
19	your	your	PRON	PRP$	GEN;2;PRO	20	nmod:poss	20:nmod:poss	_
20	system	system	NOUN	NN	SG;N	16	obl	16:obl:from	SpaceAfter=No
21	;	;	PUNCT	,	_	25	punct	25:punct	_
22	you	you	PRON	PRP	2;NOM;PRO	25	nsubj	25:nsubj|29:nsubj	_
23	should	should	AUX	MD	V;FIN	25	aux	25:aux	_
24	not	not	PART	RB	PART	25	advmod	25:advmod	_
25	copy	copy	VERB	VB	V;NFIN	9	parataxis	9:parataxis	_
26	the	the	DET	DT	DEF;DET	27	det	27:det	_
27	message	message	NOUN	NN	SG;N	25	obj	25:obj	_
28	or	or	CCONJ	CC	CONJ	29	cc	29:cc	_
29	disclose	disclose	VERB	VB	V;NFIN	25	conj	25:conj:or	_
30	its	its	PRON	PRP$	3;GEN;NEUT;PRO;SG	31	nmod:poss	31:nmod:poss	_
31	contents	contents	NOUN	NNS	N	29	obj	29:obj	_
32	to	to	ADP	IN	ADP	33	case	33:case	_
33	anyone	anyone	PRON	NN	SG;PRO	29	obl	29:obl:to	SpaceAfter=No
34	.	.	PUNCT	.	_	9	punct	9:punct	_

# sent_id = email-enronsent16_01-0035
# text = ____________________________________________________________
1	____________________________________________________________	____________________________________________________________	SYM	NFP	_	0	root	0:root	_

# sent_id = email-enronsent16_01-0036
# newpar id = email-enronsent16_01-p0020
# text = Per my conversation with Edmund this morning, we are moving the following countries to the non-approved list: Austria, Belgium, Croatia, Czech Republic, Denmark, Poland, Portugal, Romania, Singapore, and Slovenia.
1	Per	per	ADP	IN	ADP	3	case	3:case	_
2	my	my	PRON	PRP$	GEN;1;PRO;SG	3	nmod:poss	3:nmod:poss	_
3	conversation	conversation	NOUN	NN	SG;N	11	obl	11:obl:per	_
4	with	with	ADP	IN	ADP	5	case	5:case	_
5	Edmund	Edmund	PROPN	NNP	PROPN;SG	3	nmod	3:nmod:with	_
6	this	this	DET	DT	SG;DET	7	det	7:det	_
7	morning	morning	NOUN	NN	SG;N	3	nmod:tmod	3:nmod:tmod	SpaceAfter=No
8	,	,	PUNCT	,	_	3	punct	3:punct	_
9	we	we	PRON	PRP	NOM;PL;1;PRO	11	nsubj	11:nsubj	_
10	are	be	AUX	VBP	PRS;IND;FIN;PL;1;V	11	aux	11:aux	_
11	moving	move	VERB	VBG	V;V.PTCP;PRS	0	root	0:root	_
12	the	the	DET	DT	DEF;DET	14	det	14:det	_
13	following	follow	VERB	VBG	V;V.MSDR	14	amod	14:amod	_
14	countries	country	NOUN	NNS	N;PL	11	obj	11:obj	_
15	to	to	ADP	IN	ADP	18	case	18:case	_
16	the	the	DET	DT	DEF;DET	18	det	18:det	_
17	non-approved	non-approved	ADJ	JJ	ADJ	18	amod	18:amod	_
18	list	list	NOUN	NN	SG;N	11	obl	11:obl:to	SpaceAfter=No
19	:	:	PUNCT	:	_	18	punct	18:punct	_
20	Austria	Austria	PROPN	NNP	PROPN;SG	14	appos	14:appos	SpaceAfter=No
21	,	,	PUNCT	,	_	22	punct	22:punct	_
22	Belgium	Belgium	PROPN	NNP	PROPN;SG	20	conj	14:appos|20:conj:and	SpaceAfter=No
23	,	,	PUNCT	,	_	24	punct	24:punct	_
24	Croatia	Croatia	PROPN	NNP	PROPN;SG	20	conj	14:appos|20:conj:and	SpaceAfter=No
25	,	,	PUNCT	,	_	27	punct	27:punct	_
26	Czech	Czech	ADJ	NNP	ADJ	27	amod	27:amod	_
27	Republic	Republic	PROPN	NNP	PROPN;SG	20	conj	14:appos|20:conj:and	SpaceAfter=No
28	,	,	PUNCT	,	_	29	punct	29:punct	_
29	Denmark	Denmark	PROPN	NNP	PROPN;SG	20	conj	14:appos|20:conj:and	SpaceAfter=No
30	,	,	PUNCT	,	_	31	punct	31:punct	_
31	Poland	Poland	PROPN	NNP	PROPN;SG	20	conj	14:appos|20:conj:and	SpaceAfter=No
32	,	,	PUNCT	,	_	33	punct	33:punct	_
33	Portugal	Portugal	PROPN	NNP	PROPN;SG	20	conj	14:appos|20:conj:and	SpaceAfter=No
34	,	,	PUNCT	,	_	35	punct	35:punct	_
35	Romania	Romania	PROPN	NNP	PROPN;SG	20	conj	14:appos|20:conj:and	SpaceAfter=No
36	,	,	PUNCT	,	_	37	punct	37:punct	_
37	Singapore	Singapore	PROPN	NNP	PROPN;SG	20	conj	14:appos|20:conj:and	SpaceAfter=No
38	,	,	PUNCT	,	_	40	punct	40:punct	_
39	and	and	CCONJ	CC	CONJ	40	cc	40:cc	_
40	Slovenia	Slovenia	PROPN	NNP	PROPN;SG	20	conj	14:appos|20:conj:and	SpaceAfter=No
41	.	.	PUNCT	.	_	11	punct	11:punct	_

# sent_id = email-enronsent16_01-0037
# text = Below is the list, now updated to reflect this change.
1	Below	below	ADV	RB	ADV	0	root	0:root	_
2	is	be	AUX	VBZ	3;PRS;IND;FIN;V;SG	1	cop	1:cop	_
3	the	the	DET	DT	DEF;DET	4	det	4:det	_
4	list	list	NOUN	NN	SG;N	1	nsubj	1:nsubj	SpaceAfter=No
5	,	,	PUNCT	,	_	7	punct	7:punct	_
6	now	now	ADV	RB	ADV	7	advmod	7:advmod	_
7	updated	update	VERB	VBN	V;V.PTCP;PST;PASS	4	acl	4:acl	_
8	to	to	PART	TO	PART	9	mark	9:mark	_
9	reflect	reflect	VERB	VB	V;NFIN	7	advcl	7:advcl:to	_
10	this	this	DET	DT	SG;DET	11	det	11:det	_
11	change	change	NOUN	NN	SG;N	9	obj	9:obj	SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = email-enronsent16_01-0038
# text = Jurisdictions which are are approved to trade credit derivatives: Finland, Germany, Norway, Sweden, Switzerland, the U.K, and the U.S..
1	Jurisdictions	jurisdiction	NOUN	NNS	N;PL	0	root	0:root|5:nsubj:pass|7:nsubj:xsubj	_
2	which	which	PRON	WDT	PRO	5	nsubj:pass	1:ref	_
3	are	be	AUX	VBP	3;PRS;IND;FIN;PL;V	5	reparandum	5:reparandum	_
4	are	be	AUX	VBP	3;PRS;IND;FIN;PL;V	5	aux:pass	5:aux:pass	_
5	approved	approve	VERB	VBN	V;V.PTCP;PST;PASS	1	acl:relcl	1:acl:relcl	Cxn=rc-wh-nsubj:pass
6	to	to	PART	TO	PART	7	mark	7:mark	_
7	trade	trade	VERB	VB	V;NFIN	5	xcomp	5:xcomp	_
8	credit	credit	NOUN	NN	SG;N	9	compound	9:compound	_
9	derivatives	derivative	NOUN	NNS	N;PL	7	obj	7:obj	SpaceAfter=No
10	:	:	PUNCT	:	_	11	punct	11:punct	_
11	Finland	Finland	PROPN	NNP	PROPN;SG	1	appos	1:appos	SpaceAfter=No
12	,	,	PUNCT	,	_	13	punct	13:punct	_
13	Germany	Germany	PROPN	NNP	PROPN;SG	11	conj	1:appos|11:conj:and	SpaceAfter=No
14	,	,	PUNCT	,	_	15	punct	15:punct	_
15	Norway	Norway	PROPN	NNP	PROPN;SG	11	conj	1:appos|11:conj:and	SpaceAfter=No
16	,	,	PUNCT	,	_	17	punct	17:punct	_
17	Sweden	Sweden	PROPN	NNP	PROPN;SG	11	conj	1:appos|11:conj:and	SpaceAfter=No
18	,	,	PUNCT	,	_	19	punct	19:punct	_
19	Switzerland	Switzerland	PROPN	NNP	PROPN;SG	11	conj	1:appos|11:conj:and	SpaceAfter=No
20	,	,	PUNCT	,	_	22	punct	22:punct	_
21	the	the	DET	DT	DEF;DET	22	det	22:det	_
22	U.K	U.K	PROPN	NNP	PROPN;SG	11	conj	1:appos|11:conj:and	SpaceAfter=No
23	,	,	PUNCT	,	_	26	punct	26:punct	_
24	and	and	CCONJ	CC	CONJ	26	cc	26:cc	_
25	the	the	DET	DT	DEF;DET	26	det	26:det	_
26	U.S.	U.S.	PROPN	NNP	PROPN;SG	11	conj	1:appos|11:conj:and	SpaceAfter=No
27	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = email-enronsent16_01-0039
# text = Jurisdictions which are not approved to trade credit derivatives include: Austria, Belgium, Canada, Croatia, Czech Republic, Denmark, France, Gibraltar, Ireland, Italy, Poland, Portugal, Romania, Scotland, Singapore, Slovenia, Spain, and The Netherlands.
1	Jurisdictions	jurisdiction	NOUN	NNS	N;PL	10	nsubj	5:nsubj:pass|7:nsubj:xsubj|10:nsubj	_
2	which	which	PRON	WDT	PRO	5	nsubj:pass	1:ref	_
3	are	be	AUX	VBP	3;PRS;IND;FIN;PL;V	5	aux:pass	5:aux:pass	_
4	not	not	PART	RB	PART	5	advmod	5:advmod	_
5	approved	approve	VERB	VBN	V;V.PTCP;PST;PASS	1	acl:relcl	1:acl:relcl	Cxn=rc-wh-nsubj:pass
6	to	to	PART	TO	PART	7	mark	7:mark	_
7	trade	trade	VERB	VB	V;NFIN	5	xcomp	5:xcomp	_
8	credit	credit	NOUN	NN	SG;N	9	compound	9:compound	_
9	derivatives	derivative	NOUN	NNS	N;PL	7	obj	7:obj	_
10	include	include	VERB	VBP	V;3;PRS;IND;FIN;PL	0	root	0:root	SpaceAfter=No
11	:	:	PUNCT	:	_	12	punct	12:punct	_
12	Austria	Austria	PROPN	NNP	PROPN;SG	10	obj	10:obj	SpaceAfter=No
13	,	,	PUNCT	,	_	14	punct	14:punct	_
14	Belgium	Belgium	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
15	,	,	PUNCT	,	_	16	punct	16:punct	_
16	Canada	Canada	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
17	,	,	PUNCT	,	_	18	punct	18:punct	_
18	Croatia	Croatia	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
19	,	,	PUNCT	,	_	21	punct	21:punct	_
20	Czech	Czech	ADJ	NNP	ADJ	21	amod	21:amod	_
21	Republic	Republic	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
22	,	,	PUNCT	,	_	23	punct	23:punct	_
23	Denmark	Denmark	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
24	,	,	PUNCT	,	_	25	punct	25:punct	_
25	France	France	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
26	,	,	PUNCT	,	_	27	punct	27:punct	_
27	Gibraltar	Gibraltar	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
28	,	,	PUNCT	,	_	29	punct	29:punct	_
29	Ireland	Ireland	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
30	,	,	PUNCT	,	_	31	punct	31:punct	_
31	Italy	Italy	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
32	,	,	PUNCT	,	_	33	punct	33:punct	_
33	Poland	Poland	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
34	,	,	PUNCT	,	_	35	punct	35:punct	_
35	Portugal	Portugal	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
36	,	,	PUNCT	,	_	37	punct	37:punct	_
37	Romania	Romania	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
38	,	,	PUNCT	,	_	39	punct	39:punct	_
39	Scotland	Scotland	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
40	,	,	PUNCT	,	_	41	punct	41:punct	_
41	Singapore	Singapore	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
42	,	,	PUNCT	,	_	43	punct	43:punct	_
43	Slovenia	Slovenia	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
44	,	,	PUNCT	,	_	45	punct	45:punct	_
45	Spain	Spain	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
46	,	,	PUNCT	,	_	49	punct	49:punct	_
47	and	and	CCONJ	CC	CONJ	49	cc	49:cc	_
48	The	the	DET	DT	DEF;DET	49	det	49:det	_
49	Netherlands	Netherlands	PROPN	NNP	PROPN;SG	12	conj	10:obj|12:conj:and	SpaceAfter=No
50	.	.	PUNCT	.	_	10	punct	10:punct	_

# sent_id = email-enronsent16_01-0040
# text = For banks incorporated in a non-approved jurisdiction, it may be possible for them to trade out of a branch located in an approved jurisdiction (i.e. U.S. and U.K. branches).
1	For	for	ADP	IN	ADP	2	case	2:case	_
2	banks	bank	NOUN	NNS	N;PL	12	obl	12:obl:for	_
3	incorporated	incorporate	VERB	VBN	V;V.PTCP;PST;PASS	2	acl	2:acl	_
4	in	in	ADP	IN	ADP	7	case	7:case	_
5	a	a	DET	DT	DET;INDF	7	det	7:det	_
6	non-approved	non-approved	ADJ	JJ	ADJ	7	amod	7:amod	_
7	jurisdiction	jurisdiction	NOUN	NN	SG;N	3	obl	3:obl:in	SpaceAfter=No
8	,	,	PUNCT	,	_	2	punct	2:punct	_
9	it	it	PRON	PRP	3;NOM;NEUT;PRO;SG	12	expl	12:expl	_
10	may	may	AUX	MD	V;FIN	12	aux	12:aux	_
11	be	be	AUX	VB	V;NFIN	12	cop	12:cop	_
12	possible	possible	ADJ	JJ	ADJ	0	root	0:root	_
13	for	for	SCONJ	IN	CONJ	16	mark	16:mark	_
14	them	they	PRON	PRP	ACC;3;PL;PRO	16	nsubj	16:nsubj	_
15	to	to	PART	TO	PART	16	mark	16:mark	_
16	trade	trade	VERB	VB	V;NFIN	12	csubj	12:csubj	_
17	out	out	ADP	IN	ADP	20	case	20:case	_
18	of	of	ADP	IN	ADP	20	case	20:case	_
19	a	a	DET	DT	DET;INDF	20	det	20:det	_
20	branch	branch	NOUN	NN	SG;N	16	obl	16:obl:of	_
21	located	locate	VERB	VBN	V;V.PTCP;PST;PASS	20	acl	20:acl	_
22	in	in	ADP	IN	ADP	25	case	25:case	_
23	an	a	DET	DT	DET;INDF	25	det	25:det	_
24	approved	approve	VERB	VBN	V;V.PTCP;PST;PASS	25	amod	25:amod	_
25	jurisdiction	jurisdiction	NOUN	NN	SG;N	21	obl	21:obl:in	_
26	(	(	PUNCT	-LRB-	_	31	punct	31:punct	SpaceAfter=No
27	i.e.	i.e.	ADJ	FW	ADJ	31	amod	31:amod	_
28	U.S.	U.S.	PROPN	NNP	PROPN;SG	31	compound	31:compound	_
29	and	and	CCONJ	CC	CONJ	30	cc	30:cc	_
30	U.K.	U.K.	PROPN	NNP	PROPN;SG	28	conj	28:conj:and|31:compound	_
31	branches	branch	NOUN	NNS	N;PL	25	appos	25:appos	SpaceAfter=No
32	)	)	PUNCT	-RRB-	_	31	punct	31:punct	SpaceAfter=No
33	.	.	PUNCT	.	_	12	punct	12:punct	_

# sent_id = email-enronsent16_01-0041
# text = This would have to be determined on a case by case basis.
1	This	this	PRON	DT	SG;PRO	3	nsubj	3:nsubj|6:nsubj:xsubj	_
2	would	would	AUX	MD	V;FIN	3	aux	3:aux	_
3	have	have	VERB	VB	V;NFIN	0	root	0:root	_
4	to	to	PART	TO	PART	6	mark	6:mark	_
5	be	be	AUX	VB	V;NFIN	6	aux:pass	6:aux:pass	_
6	determined	determine	VERB	VBN	V;V.PTCP;PST;PASS	3	xcomp	3:xcomp	_
7	on	on	ADP	IN	ADP	12	case	12:case	_
8	a	a	DET	DT	DET;INDF	12	det	12:det	_
9	case	case	NOUN	NN	SG;N	12	compound	12:compound	_
10	by	by	ADP	IN	ADP	11	case	11:case	_
11	case	case	NOUN	NN	SG;N	9	nmod	9:nmod:by	_
12	basis	basis	NOUN	NN	SG;N	6	obl	6:obl:on	SpaceAfter=No
13	.	.	PUNCT	.	_	3	punct	3:punct	_

